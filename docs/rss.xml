<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Benchary</title><link>https://kaokit.com</link><description>简单即是一切。</description><copyright>Benchary</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://img.picgo.net/2024/06/18/truec1f100947e01f7d9.jpeg</url><title>avatar</title><link>https://kaokit.com</link></image><lastBuildDate>Tue, 18 Jun 2024 06:46:15 +0000</lastBuildDate><managingEditor>Benchary</managingEditor><ttl>60</ttl><webMaster>Benchary</webMaster><item><title>WordPress 数据库管理神器 phpMyAdmin 安装配置</title><link>https://kaokit.com/post/WordPress%20-shu-ju-ku-guan-li-shen-qi-%20phpMyAdmin%20-an-zhuang-pei-zhi.html</link><description>&gt; 动态网站的重要数据(文章、页面、图片)都存放在后端数据库，对于新手站长来说 Wordpress 都部署在 SiteGround 这类网站托管服务商，无需管理自己网站的数据库，博主可能职业因素，希望能将 WordPress 的管理更加透明化，更加自主可控，所以就涉及到了WordPress 的数据库管理，本文就推荐一款 WordPress 数据库 web 管理工具 phpMyAdmin ！&#13;
&#13;
&gt; [!TIP]&#13;
&gt; phpMyAdmin 仅支持 MySQL / MariaDB 数据库的管理&#13;
&#13;
&#13;
##  1.  先决条件&#13;
&#13;
安装 phpMyAdmin 的必要条件&#13;
&#13;
###  1.1 子域名申请&#13;
&#13;
用于 phpMyAdmin 的站点管理，比如 `sub.example.com`&#13;
&#13;
###  1.2 子域名 SSL 证书申请&#13;
&#13;
用于phpMyAdmin的站点管理，比如 `https://sub.example.com` &#13;
&#13;
##  2.  下载安装 phpMyAdmin&#13;
&#13;
输入以下安装命令&#13;
&#13;
```bash&#13;
apt install phpmyadmin nginx&#13;
```&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 我的 Wordpress 环境是 Ubuntu server 操作系统&#13;
&#13;
&#13;
安装过程中若弹出图形化界面需要选择 `apache2`  `lighttpd` ,直接退出该选项，因为本文的 web 服务器是 nginx &#13;
&#13;
弹出 `MySQL application password for phpmyadmin:` 的提示时输入 phpMyAdmin 连接数据库密码即可&#13;
&#13;
&#13;
## 3. 创建 phpMyAdmin 站点发布目录&#13;
&#13;
将 phpMyAdmin 整个 web 文件链接至 web 发布目录&#13;
&#13;
```bash&#13;
ln -s /usr/share/phpmyadmin /var/www/html/exampledir&#13;
&#13;
```&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; `exampledir` 替换成你自定义的目录名称，切忌替换成与 `phpmyadmin` 相同或类似字符的名称，容易受到网络安全威胁&#13;
&#13;
&#13;
## 4. phpMyAdmin 的 Nginx 站点配置&#13;
&#13;
编辑 wordpress 的 `nginx` 配置文件&#13;
&#13;
```bash&#13;
vim /etc/nginx/sites-available/wordpress&#13;
```&#13;
&#13;
将以下 phpMyAdmin 的 `nginx` 配置(含 https 及其他安全设置),复制到此配置文件，切忌 **覆盖**，是 **新增** 配置&#13;
&#13;
```bash&#13;
#防止跨域跳转 wordpress 站点&#13;
server {&#13;
    listen 443;&#13;
    server_name sub.example.com;&#13;
    return 404;&#13;
}&#13;
server {&#13;
#默认的 443 改成自定义端口&#13;
    listen 63890 ssl http2;&#13;
    server_name sub.example.com;&#13;
    ssl_certificate /etc/nginx/sub.example.com_bundle.crt;&#13;
    ssl_certificate_key /etc/nginx/sub.example.com.key;&#13;
    ssl_session_timeout 5m;&#13;
    ssl_protocols TLSv1.2 TLSv1.3;&#13;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;&#13;
    ssl_prefer_server_ciphers on;&#13;
    root /var/www/html;&#13;
    index index.php index.html index.htm;&#13;
    location /exampledir {&#13;
        alias /usr/share/phpmyadmin;&#13;
        index index.php;&#13;
    }&#13;
    #防止跳转根目录&#13;
    location / {&#13;
        return 404;&#13;
    }&#13;
    location ~ \.php$ {&#13;
        include snippets/fastcgi-php.conf;&#13;
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;&#13;
    }&#13;
    location ~ /\.ht {&#13;
        deny all;&#13;
    }&#13;
}&#13;
```&#13;
&gt;[!WARNING]&#13;
&gt; `sub.example.com` 替换实际子域名；`63890` 替换实际端口；`exampledir` 替换实际 phpMyAdmin 发布目录；`php8.2` 替换实际 php 版本&#13;
&#13;
&#13;
## 5. 重启 nginx 服务及重载 nginx 配置&#13;
&#13;
```bash&#13;
systemctl restart nginx&#13;
systemctl reload nginx&#13;
```&#13;
&#13;
## 6. 验证访问&#13;
&#13;
浏览器输入以下地址即可访问 phpMyAdmin&#13;
&#13;
```bash&#13;
https://sub.example.com:63890/exampledir&#13;
```&#13;
。</description><guid isPermaLink="true">https://kaokit.com/post/WordPress%20-shu-ju-ku-guan-li-shen-qi-%20phpMyAdmin%20-an-zhuang-pei-zhi.html</guid><pubDate>Tue, 18 Jun 2024 06:45:51 +0000</pubDate></item><item><title>腾讯云 WordPress 启用(HTTPS)协议</title><link>https://kaokit.com/post/teng-xun-yun-%20WordPress%20-qi-yong-%28HTTPS%29-xie-yi.html</link><description>&gt; [!WARNING]&#13;
&gt; HTTPS 是网站必须使用的加密传输协议，需要安装配置 SSL 证书，这是网站必要的安全设置，接下来就演示在腾讯云环境中给WordPress 安装 Nginx SSL 证书！&#13;
&#13;
&gt; [!TIP]&#13;
&gt; 谷歌浏览器默认支持 HTTPS，不支持 HTTP，比如输入 `example.com`  ,它会自动跳转 `https://example.com`&#13;
&#13;
## 1. 设置 WordPress 站点 URL&#13;
&#13;
在 WordPress 后台控制面板的设置中将 WordPress地址 (URL) 及站点地址 (URL) 都设置成 `https://example.com`&#13;
&#13;
&gt; [!WARNING]&#13;
&gt; 改成 https 的 URL 后，wordpress 整个网站及后台控制台将无法访问,这是正常现象，继续参考本文以下内容配置即可，如果想回退此操作，请参考文末内容&#13;
&#13;
## 2. 下载Nginx SSL证书&#13;
&#13;
在我的 &lt;strong&gt;[腾讯云证书控制台](https://cloud.tencent.com/login?s_url=https%3A%2F%2Fconsole.cloud.tencent.com%2Fssl)&lt;/strong&gt; 中选择您需要安装的证书并单击&lt;u&gt;&lt;strong&gt;下载&lt;/strong&gt;&lt;/u&gt;&#13;
&#13;
在弹出的 &lt;strong&gt;证书下载&lt;/strong&gt; 窗口中，服务器类型选择 &lt;strong&gt;Nginx&lt;/strong&gt; ，单击下载并解压缩 &lt;strong&gt;example.com_nginx.zip&lt;/strong&gt; 至本地电脑。</description><guid isPermaLink="true">https://kaokit.com/post/teng-xun-yun-%20WordPress%20-qi-yong-%28HTTPS%29-xie-yi.html</guid><pubDate>Tue, 18 Jun 2024 06:44:38 +0000</pubDate></item><item><title>腾讯云裸机搭建 WordPress</title><link>https://kaokit.com/post/teng-xun-yun-luo-ji-da-jian-%20WordPress.html</link><description>&gt; 这是篇使用腾讯云的轻量服务器快速搭建自己的 WordPress 独立网站的教程  如果是国内用户，还是非常推荐使用腾讯云的轻量服务器作为独立网站的主机，因为性价比高。</description><guid isPermaLink="true">https://kaokit.com/post/teng-xun-yun-luo-ji-da-jian-%20WordPress.html</guid><pubDate>Tue, 18 Jun 2024 06:42:59 +0000</pubDate></item><item><title>我的 Windows 电脑系统重置方案</title><link>https://kaokit.com/post/wo-de-%20Windows%20-dian-nao-xi-tong-zhong-zhi-fang-an.html</link><description>时隔 2 年，我将自用的惠普笔记本电脑的 windows 10 系统重置了，这台惠普笔记本原本是媳妇用的，用着还不错，期间我还换了 16 GB 运行内存。</description><guid isPermaLink="true">https://kaokit.com/post/wo-de-%20Windows%20-dian-nao-xi-tong-zhong-zhi-fang-an.html</guid><pubDate>Tue, 18 Jun 2024 05:28:24 +0000</pubDate></item><item><title>详解IPv4编址</title><link>https://kaokit.com/post/xiang-jie-IPv4-bian-zhi.html</link><description>IP 编址指的的是 IP 地址编排技术，它涉及 IP 地址的分配和管理过程。</description><guid isPermaLink="true">https://kaokit.com/post/xiang-jie-IPv4-bian-zhi.html</guid><pubDate>Mon, 17 Jun 2024 08:28:52 +0000</pubDate></item></channel></rss>