<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Benchary</title><link>https://kaokit.com</link><description>简单即是一切。</description><copyright>Benchary</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://img.picgo.net/2024/06/18/truec1f100947e01f7d9.jpeg</url><title>avatar</title><link>https://kaokit.com</link></image><lastBuildDate>Thu, 20 Jun 2024 05:52:50 +0000</lastBuildDate><managingEditor>Benchary</managingEditor><ttl>60</ttl><webMaster>Benchary</webMaster><item><title>使用Wireshark识别并捕获WLAN(802.11)流量</title><link>https://kaokit.com/post/shi-yong-Wireshark-shi-bie-bing-bu-huo-WLAN%28802.11%29-liu-liang.html</link><description>## 案例&#13;
想用 WireShark 捕获分析 WLAN 流量，但是发现捕获到的封包中并未识别到 802.11 的数据帧，而是被转义成了 Ethernet 数据帧信息，这样就屏蔽了真实的 802.11 信息 （如下信息），对WLAN 数据包分析造成了一定的阻碍。</description><guid isPermaLink="true">https://kaokit.com/post/shi-yong-Wireshark-shi-bie-bing-bu-huo-WLAN%28802.11%29-liu-liang.html</guid><pubDate>Thu, 20 Jun 2024 05:52:26 +0000</pubDate></item><item><title>Hostname(主机名)和Domain(域名)的区别及关系</title><link>https://kaokit.com/post/Hostname%28-zhu-ji-ming-%29-he-Domain%28-yu-ming-%29-de-qu-bie-ji-guan-xi.html</link><description>日常工作中经常将 Hostname (主机名) 和 Domain (域名) 两者混淆，两者是不同的概念，但是两者在互联网中又需要结合应用。</description><guid isPermaLink="true">https://kaokit.com/post/Hostname%28-zhu-ji-ming-%29-he-Domain%28-yu-ming-%29-de-qu-bie-ji-guan-xi.html</guid><pubDate>Thu, 20 Jun 2024 05:50:55 +0000</pubDate></item><item><title>SFTP客户端与服务端之间通信问题</title><link>https://kaokit.com/post/SFTP-ke-hu-duan-yu-fu-wu-duan-zhi-jian-tong-xin-wen-ti.html</link><description>使用 Filezilla 客户端进行 SFTP 远程显示如下报错日志，无法正常登录&#13;
&#13;
```&#13;
Couldn't agree a key exchange algorithm (available: curve25519-sha256,curve25519-sha256@libssh.org,ecdh-sha2-nistp256,ecdh-sha2-nistp384,ecdh-sha2-nistp521,diffie-hellman-group16-sha512,diffie-hellman-group18-sha512) &#13;
```&#13;
这个日志的含义：**无法交换密钥信息** 于是我使用 Wireshark 抓了个包看了下，发现 3 次握手正常，至少说明网络层和传输层是没什么问题的，因为我之前就设置了正确的防火墙策略，而且防火墙日志是 allow 的信息，但是通过 Wireshark 追踪流发现没有 SFTP 的密钥交换信息。</description><guid isPermaLink="true">https://kaokit.com/post/SFTP-ke-hu-duan-yu-fu-wu-duan-zhi-jian-tong-xin-wen-ti.html</guid><pubDate>Thu, 20 Jun 2024 05:48:29 +0000</pubDate></item><item><title>windows 内置网络包捕获器的使用</title><link>https://kaokit.com/post/windows%20-nei-zhi-wang-luo-bao-bu-huo-qi-de-shi-yong.html</link><description>正常情况下都会使用 Wireshark 进行网络数据包的捕获及分析，但是现在受于环境限制，电脑被禁止安装 Wireshark  软件，于是我找到了微软官方的网络包捕获器，比如 Microsoft Network Monitor 这款工具，但是客户还是不让装，办法还是比问题多，可以通过 cmd 命令提示符使用 Windows 内置的网络包捕获功能，操作如下：&#13;
&#13;
## 网络包数据捕获&#13;
&#13;
以**管理员身份**运行 cmd ，输入以下命令后，开始捕获网络数据包&#13;
&#13;
```bash&#13;
C:\Windows\system32&gt;netsh trace start capture=yes report=disabled&#13;
&#13;
跟踪配置:&#13;
-------------------------------------------------------------------&#13;
状态:             正在运行&#13;
跟踪文件:         C:\Users\user\AppData\Local\Temp\NetTraces\NetTrace.etl&#13;
附加:             关闭&#13;
循环:           启用&#13;
最大大小:           512 MB&#13;
报告:             已禁用&#13;
```&#13;
此时行任意的网络活动都将被捕获器捕获&#13;
&#13;
输入以下命令停用捕获器，然后会在`C:\Users\[管理员用户名]\AppData\Local\Temp\NetTraces\`目录下生成名为`NetTrace.etl`的文件，这个文件内容就是捕获到的所有网络数据包数据信息。</description><guid isPermaLink="true">https://kaokit.com/post/windows%20-nei-zhi-wang-luo-bao-bu-huo-qi-de-shi-yong.html</guid><pubDate>Thu, 20 Jun 2024 05:45:07 +0000</pubDate></item><item><title>WLAN、WiFi、Hotspot(热点)之间的关系及区别</title><link>https://kaokit.com/post/WLAN%E3%80%81WiFi%E3%80%81Hotspot%28-re-dian-%29-zhi-jian-de-guan-xi-ji-qu-bie.html</link><description>先了解下概念&#13;
- WLAN (Wireless Local Area Network) 是无线局域网的含义，可以理解为商业化技术名词 ，包含了多种技术标准的无线局域网的统称&#13;
- Wi-Fi 指的是 Wi-Fi 联盟的商标，是一种基于 IEEE 802.11 标准的 WLAN 技术，由于 Wi-Fi 的普及，生活中已将  Wi-Fi 成为实际的 WLAN的专属名词&#13;
-  Hotspot 即无线热点的含义，指在提供 Wi-Fi 接入的网络服务，它的作用可以将 Wi-Fi 的网络覆盖范围延申，方便人们手持移动端无线网络的使用，目前无论是平板电脑、还是普通 PC，甚至是智能手机均提供 Hotspot 功能&#13;
&#13;
从上述概念中基本了解了 WLAN 包含了 Wi-Fi 和 Hotspot 两种无线网技术&#13;
&#13;
那现在有问题，我笔记本电脑无线接入家里的 Wi-Fi 然后访问外部互联网 ，因为有其他需求，我需要将电脑启用 windows 内置的Hotspot ，然后将手机接入电脑的无线热点访问互联网，此时 Hotspot 就相当于 Wi-Fi 中继器一样，我认为此时手机获取的 IP 地址应该是和电脑属于同一子网，但是实际出乎了我的意料，尽然是和电脑两个不同的子网。</description><guid isPermaLink="true">https://kaokit.com/post/WLAN%E3%80%81WiFi%E3%80%81Hotspot%28-re-dian-%29-zhi-jian-de-guan-xi-ji-qu-bie.html</guid><pubDate>Thu, 20 Jun 2024 05:41:22 +0000</pubDate></item><item><title>关于 Telnet 探活任意 TCP 端口的细节问题</title><link>https://kaokit.com/post/guan-yu-%20Telnet%20-tan-huo-ren-yi-%20TCP%20-duan-kou-de-xi-jie-wen-ti.html</link><description>作为计算机网络技术人员经常会接到类似的故障请求：&#13;
- 网页无法访问&#13;
- 某台服务器或者设备无法SSH远程&#13;
&#13;
在通过 ping 测试网络正常的情况下，都会根据 TCP 的 3 次握手及 4 次挥手的协议，利用客户端 telnet 目标 IP + 端口的方式来确认目标应用服务是否存活，其实这测试的只是传输层 TCP 是否连接，一些场景下其实并不能完全有效验证目标服务应用层协议是否正常，那么这个判断依据是什么呢？&#13;
&#13;
其实在这个问题上，我之前一直还有个疑惑 telnet 只是个应用层协议，用的是默认端口 23 ，但是为什么 telnet还能远程其他类似 {(http:80) (https:443) (ssh:22)} 这些端口呢？&#13;
&#13;
针对上述两个疑问，继续进行如下剖析：&#13;
&#13;
Telnet 客户端之所以能够远程连接其他服务端口，是因为它本身是基于 TCP 的程序。</description><guid isPermaLink="true">https://kaokit.com/post/guan-yu-%20Telnet%20-tan-huo-ren-yi-%20TCP%20-duan-kou-de-xi-jie-wen-ti.html</guid><pubDate>Tue, 18 Jun 2024 07:36:38 +0000</pubDate></item><item><title>使用 Github 搭建博客站点</title><link>https://kaokit.com/post/shi-yong-%20Github%20-da-jian-bo-ke-zhan-dian.html</link><description>我用过很多网站工具生成博客站点，Jekyll、wordpress、Hexo，这类工具功能非常强大，但使用起来有些复杂(比如我之前发布的 Wordpress 内容)原本博客就是一种内容创作、记录日常所见所闻所想的网络日志，但是自从用了上述这类工具后，把精力都耗在了折腾网站主题和各种功能的扩展上，背离了博客写作的初衷。</description><guid isPermaLink="true">https://kaokit.com/post/shi-yong-%20Github%20-da-jian-bo-ke-zhan-dian.html</guid><pubDate>Tue, 18 Jun 2024 07:04:13 +0000</pubDate></item><item><title>WordPress 云端完整备份迁移至本地</title><link>https://kaokit.com/post/WordPress%20-yun-duan-wan-zheng-bei-fen-qian-yi-zhi-ben-di.html</link><description>&gt; 关于 WordPress 网站备份迁移计划还是继续执行了，困扰很久，这么折腾，为什么一定要做迁移计划，基于以下3点：  &#13;
   - 验证 WordPress 网站可移植性  &#13;
   - 验证 WordPress 网站数据备份方案  &#13;
   - 验证 WordPress 网站数据云端下沉本地方案  &#13;
 &#13;
 所以 WordPress 网站备份迁移，尽管过程繁琐，但备份迁移计划至关重要。</description><guid isPermaLink="true">https://kaokit.com/post/WordPress%20-yun-duan-wan-zheng-bei-fen-qian-yi-zhi-ben-di.html</guid><pubDate>Tue, 18 Jun 2024 06:53:47 +0000</pubDate></item><item><title>WordPress 数据库管理神器 phpMyAdmin 安装配置</title><link>https://kaokit.com/post/WordPress%20-shu-ju-ku-guan-li-shen-qi-%20phpMyAdmin%20-an-zhuang-pei-zhi.html</link><description>&gt; 动态网站的重要数据(文章、页面、图片)都存放在后端数据库，对于新手站长来说 Wordpress 都部署在 SiteGround 这类网站托管服务商，无需管理自己网站的数据库，博主可能职业因素，希望能将 WordPress 的管理更加透明化，更加自主可控，所以就涉及到了WordPress 的数据库管理，本文就推荐一款 WordPress 数据库 web 管理工具 phpMyAdmin ！&#13;
&#13;
&gt; [!TIP]&#13;
&gt; phpMyAdmin 仅支持 MySQL / MariaDB 数据库的管理&#13;
&#13;
&#13;
##  1.  先决条件&#13;
&#13;
安装 phpMyAdmin 的必要条件&#13;
&#13;
###  1.1 子域名申请&#13;
&#13;
用于 phpMyAdmin 的站点管理，比如 `sub.example.com`&#13;
&#13;
###  1.2 子域名 SSL 证书申请&#13;
&#13;
用于phpMyAdmin的站点管理，比如 `https://sub.example.com` &#13;
&#13;
##  2.  下载安装 phpMyAdmin&#13;
&#13;
输入以下安装命令&#13;
&#13;
```bash&#13;
apt install phpmyadmin nginx&#13;
```&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; 我的 Wordpress 环境是 Ubuntu server 操作系统&#13;
&#13;
&#13;
安装过程中若弹出图形化界面需要选择 `apache2`  `lighttpd` ,直接退出该选项，因为本文的 web 服务器是 nginx &#13;
&#13;
弹出 `MySQL application password for phpmyadmin:` 的提示时输入 phpMyAdmin 连接数据库密码即可&#13;
&#13;
&#13;
## 3. 创建 phpMyAdmin 站点发布目录&#13;
&#13;
将 phpMyAdmin 整个 web 文件链接至 web 发布目录&#13;
&#13;
```bash&#13;
ln -s /usr/share/phpmyadmin /var/www/html/exampledir&#13;
&#13;
```&#13;
&#13;
&gt; [!NOTE]&#13;
&gt; `exampledir` 替换成你自定义的目录名称，切忌替换成与 `phpmyadmin` 相同或类似字符的名称，容易受到网络安全威胁&#13;
&#13;
&#13;
## 4. phpMyAdmin 的 Nginx 站点配置&#13;
&#13;
编辑 wordpress 的 `nginx` 配置文件&#13;
&#13;
```bash&#13;
vim /etc/nginx/sites-available/wordpress&#13;
```&#13;
&#13;
将以下 phpMyAdmin 的 `nginx` 配置(含 https 及其他安全设置),复制到此配置文件，切忌 **覆盖**，是 **新增** 配置&#13;
&#13;
```bash&#13;
#防止跨域跳转 wordpress 站点&#13;
server {&#13;
    listen 443;&#13;
    server_name sub.example.com;&#13;
    return 404;&#13;
}&#13;
server {&#13;
#默认的 443 改成自定义端口&#13;
    listen 63890 ssl http2;&#13;
    server_name sub.example.com;&#13;
    ssl_certificate /etc/nginx/sub.example.com_bundle.crt;&#13;
    ssl_certificate_key /etc/nginx/sub.example.com.key;&#13;
    ssl_session_timeout 5m;&#13;
    ssl_protocols TLSv1.2 TLSv1.3;&#13;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;&#13;
    ssl_prefer_server_ciphers on;&#13;
    root /var/www/html;&#13;
    index index.php index.html index.htm;&#13;
    location /exampledir {&#13;
        alias /usr/share/phpmyadmin;&#13;
        index index.php;&#13;
    }&#13;
    #防止跳转根目录&#13;
    location / {&#13;
        return 404;&#13;
    }&#13;
    location ~ \.php$ {&#13;
        include snippets/fastcgi-php.conf;&#13;
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;&#13;
    }&#13;
    location ~ /\.ht {&#13;
        deny all;&#13;
    }&#13;
}&#13;
```&#13;
&gt;[!WARNING]&#13;
&gt; `sub.example.com` 替换实际子域名；`63890` 替换实际端口；`exampledir` 替换实际 phpMyAdmin 发布目录；`php8.2` 替换实际 php 版本&#13;
&#13;
&#13;
## 5. 重启 nginx 服务及重载 nginx 配置&#13;
&#13;
```bash&#13;
systemctl restart nginx&#13;
systemctl reload nginx&#13;
```&#13;
&#13;
## 6. 验证访问&#13;
&#13;
浏览器输入以下地址即可访问 phpMyAdmin&#13;
&#13;
```bash&#13;
https://sub.example.com:63890/exampledir&#13;
```&#13;
。</description><guid isPermaLink="true">https://kaokit.com/post/WordPress%20-shu-ju-ku-guan-li-shen-qi-%20phpMyAdmin%20-an-zhuang-pei-zhi.html</guid><pubDate>Tue, 18 Jun 2024 06:45:51 +0000</pubDate></item><item><title>腾讯云 WordPress 启用(HTTPS)协议</title><link>https://kaokit.com/post/teng-xun-yun-%20WordPress%20-qi-yong-%28HTTPS%29-xie-yi.html</link><description>&gt; [!WARNING]&#13;
&gt; HTTPS 是网站必须使用的加密传输协议，需要安装配置 SSL 证书，这是网站必要的安全设置，接下来就演示在腾讯云环境中给WordPress 安装 Nginx SSL 证书！&#13;
&#13;
&gt; [!TIP]&#13;
&gt; 谷歌浏览器默认支持 HTTPS，不支持 HTTP，比如输入 `example.com`  ,它会自动跳转 `https://example.com`&#13;
&#13;
## 1. 设置 WordPress 站点 URL&#13;
&#13;
在 WordPress 后台控制面板的设置中将 WordPress地址 (URL) 及站点地址 (URL) 都设置成 `https://example.com`&#13;
&#13;
&gt; [!WARNING]&#13;
&gt; 改成 https 的 URL 后，wordpress 整个网站及后台控制台将无法访问,这是正常现象，继续参考本文以下内容配置即可，如果想回退此操作，请参考文末内容&#13;
&#13;
## 2. 下载Nginx SSL证书&#13;
&#13;
在我的 &lt;strong&gt;[腾讯云证书控制台](https://cloud.tencent.com/login?s_url=https%3A%2F%2Fconsole.cloud.tencent.com%2Fssl)&lt;/strong&gt; 中选择您需要安装的证书并单击&lt;u&gt;&lt;strong&gt;下载&lt;/strong&gt;&lt;/u&gt;&#13;
&#13;
在弹出的 &lt;strong&gt;证书下载&lt;/strong&gt; 窗口中，服务器类型选择 &lt;strong&gt;Nginx&lt;/strong&gt; ，单击下载并解压缩 &lt;strong&gt;example.com_nginx.zip&lt;/strong&gt; 至本地电脑。</description><guid isPermaLink="true">https://kaokit.com/post/teng-xun-yun-%20WordPress%20-qi-yong-%28HTTPS%29-xie-yi.html</guid><pubDate>Tue, 18 Jun 2024 06:44:38 +0000</pubDate></item><item><title>腾讯云裸机搭建 WordPress</title><link>https://kaokit.com/post/teng-xun-yun-luo-ji-da-jian-%20WordPress.html</link><description>&gt; 这是篇使用腾讯云的轻量服务器快速搭建自己的 WordPress 独立网站的教程  如果是国内用户，还是非常推荐使用腾讯云的轻量服务器作为独立网站的主机，因为性价比高。</description><guid isPermaLink="true">https://kaokit.com/post/teng-xun-yun-luo-ji-da-jian-%20WordPress.html</guid><pubDate>Tue, 18 Jun 2024 06:42:59 +0000</pubDate></item><item><title>我的 Windows 电脑系统重置方案</title><link>https://kaokit.com/post/wo-de-%20Windows%20-dian-nao-xi-tong-zhong-zhi-fang-an.html</link><description>时隔 2 年，我将自用的惠普笔记本电脑的 windows 10 系统重置了，这台惠普笔记本原本是媳妇用的，用着还不错，期间我还换了 16 GB 运行内存。</description><guid isPermaLink="true">https://kaokit.com/post/wo-de-%20Windows%20-dian-nao-xi-tong-zhong-zhi-fang-an.html</guid><pubDate>Tue, 18 Jun 2024 05:28:24 +0000</pubDate></item><item><title>详解IPv4编址</title><link>https://kaokit.com/post/xiang-jie-IPv4-bian-zhi.html</link><description>IP 编址指的的是 IP 地址编排技术，它涉及 IP 地址的分配和管理过程。</description><guid isPermaLink="true">https://kaokit.com/post/xiang-jie-IPv4-bian-zhi.html</guid><pubDate>Mon, 17 Jun 2024 08:28:52 +0000</pubDate></item></channel></rss>